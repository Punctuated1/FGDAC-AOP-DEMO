plugins {
	id 'java'
	id 'org.springframework.boot' version '3.0.4'
	id 'io.spring.dependency-management' version '1.1.0'
}

group = 'com.pd.benchmark'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
//	  maven {
//  /          credentials {
//                username "$gemfireReleaseRepoUser"
//                password "$gemfireReleaseRepoPassword"
//            }
//            url "http://commercial-repo.pivotal.io/data3/gemfire-release-repo/gemfire"
//      }
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
//	implementation 'org.springframework.data:spring-data-gemfire:2.3.9.RELEASE'
//	implementation 'org.apache.geode:geode-core:1.15.1'
	implementation "org.aspectj:aspectjrt"
	implementation 'org.springframework.boot:spring-boot-starter-aop'
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'	
	implementation 'org.springframework.kafka:spring-kafka'
	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
	implementation 'org.postgresql:postgresql:42.1.4'
	
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	
}

jar {
	duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    manifest {
        attributes "Main-Class": "com.pd.benchmark.geode.BenchmarkGeodeApplication"
    }

    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

tasks.named('test') {
	useJUnitPlatform()
}
